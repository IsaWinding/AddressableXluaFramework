//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public UnitPartrolPoint unitPartrolPoint { get { return (UnitPartrolPoint)GetComponent(BattleComponentsLookup.UnitPartrolPoint); } }
    public bool hasUnitPartrolPoint { get { return HasComponent(BattleComponentsLookup.UnitPartrolPoint); } }

    public void AddUnitPartrolPoint(bool newIsForward, PathPoint newNextPoint) {
        var index = BattleComponentsLookup.UnitPartrolPoint;
        var component = (UnitPartrolPoint)CreateComponent(index, typeof(UnitPartrolPoint));
        component.isForward = newIsForward;
        component.nextPoint = newNextPoint;
        AddComponent(index, component);
    }

    public void ReplaceUnitPartrolPoint(bool newIsForward, PathPoint newNextPoint) {
        var index = BattleComponentsLookup.UnitPartrolPoint;
        var component = (UnitPartrolPoint)CreateComponent(index, typeof(UnitPartrolPoint));
        component.isForward = newIsForward;
        component.nextPoint = newNextPoint;
        ReplaceComponent(index, component);
    }

    public void RemoveUnitPartrolPoint() {
        RemoveComponent(BattleComponentsLookup.UnitPartrolPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherUnitPartrolPoint;

    public static Entitas.IMatcher<BattleEntity> UnitPartrolPoint {
        get {
            if (_matcherUnitPartrolPoint == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.UnitPartrolPoint);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherUnitPartrolPoint = matcher;
            }

            return _matcherUnitPartrolPoint;
        }
    }
}
