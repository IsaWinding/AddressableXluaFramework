//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public AIStateComponent aIState { get { return (AIStateComponent)GetComponent(BattleComponentsLookup.AIState); } }
    public bool hasAIState { get { return HasComponent(BattleComponentsLookup.AIState); } }

    public void AddAIState(AIStateType newAiStateType) {
        var index = BattleComponentsLookup.AIState;
        var component = (AIStateComponent)CreateComponent(index, typeof(AIStateComponent));
        component.aiStateType = newAiStateType;
        AddComponent(index, component);
    }

    public void ReplaceAIState(AIStateType newAiStateType) {
        var index = BattleComponentsLookup.AIState;
        var component = (AIStateComponent)CreateComponent(index, typeof(AIStateComponent));
        component.aiStateType = newAiStateType;
        ReplaceComponent(index, component);
    }

    public void RemoveAIState() {
        RemoveComponent(BattleComponentsLookup.AIState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherAIState;

    public static Entitas.IMatcher<BattleEntity> AIState {
        get {
            if (_matcherAIState == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.AIState);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherAIState = matcher;
            }

            return _matcherAIState;
        }
    }
}
