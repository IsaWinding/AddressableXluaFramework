//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleFieldEntity {

    public UnitCreateComponent unitCreate { get { return (UnitCreateComponent)GetComponent(BattleFieldComponentsLookup.UnitCreate); } }
    public bool hasUnitCreate { get { return HasComponent(BattleFieldComponentsLookup.UnitCreate); } }

    public void AddUnitCreate(float newNextCreatTime, float newCreatCDTime) {
        var index = BattleFieldComponentsLookup.UnitCreate;
        var component = (UnitCreateComponent)CreateComponent(index, typeof(UnitCreateComponent));
        component.NextCreatTime = newNextCreatTime;
        component.CreatCDTime = newCreatCDTime;
        AddComponent(index, component);
    }

    public void ReplaceUnitCreate(float newNextCreatTime, float newCreatCDTime) {
        var index = BattleFieldComponentsLookup.UnitCreate;
        var component = (UnitCreateComponent)CreateComponent(index, typeof(UnitCreateComponent));
        component.NextCreatTime = newNextCreatTime;
        component.CreatCDTime = newCreatCDTime;
        ReplaceComponent(index, component);
    }

    public void RemoveUnitCreate() {
        RemoveComponent(BattleFieldComponentsLookup.UnitCreate);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleFieldMatcher {

    static Entitas.IMatcher<BattleFieldEntity> _matcherUnitCreate;

    public static Entitas.IMatcher<BattleFieldEntity> UnitCreate {
        get {
            if (_matcherUnitCreate == null) {
                var matcher = (Entitas.Matcher<BattleFieldEntity>)Entitas.Matcher<BattleFieldEntity>.AllOf(BattleFieldComponentsLookup.UnitCreate);
                matcher.componentNames = BattleFieldComponentsLookup.componentNames;
                _matcherUnitCreate = matcher;
            }

            return _matcherUnitCreate;
        }
    }
}
